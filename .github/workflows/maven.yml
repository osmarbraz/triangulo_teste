# Nome do workflow no repositório
name: Integração continua de Java com Maven
   
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]    
    
jobs:
  # Jobs do ambiente de desenvolvimento
  build:
    # Runner com uma instância da matriz
    runs-on: ${{ matrix.os }}      
    # Nome do Job no workflow
    name: build - SO ${{ matrix.os }} e JDK ${{matrix.java}}... 
    # Prepara diversas versões do SO e do Java
    strategy:
      fail-fast: false
      matrix:        
        os: [ubuntu-latest, macos-latest]          
        java: [17, 18]       
    # Passos do job
    steps:
      # Utiliza a action checkout para fazer o git clone no runner  
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      # Utiliza a action setup-java para configurar a versão necessária do JDK
      - name: Configurando o JDK ${{matrix.java}}... 
        uses: actions/setup-java@v3        
        with:
          java-version: ${{matrix.java}}
          distribution: 'temurin'
          cache: maven
      - name: Cache dos pacotes do SonarCloud
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      # Configura um cache as dependências do projeto, isso vai permitir 
      # que as próximas execuções do workflow sejam mais rápidas visto 
      # que as dependências já estarão disponibilizadas para o runner
      - name: Cache dos pacotes do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Executa a verificação do projeto com o Maven no runner    
      - name: Verificando o código
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}        
        #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=osmarbraz_triangulo_teste #Default do sonarcloud        
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=osmarbraz_triangulo_teste org.jacoco:jacoco-maven-plugin:prepare-agent -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml 
